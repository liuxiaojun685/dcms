package cn.bestsec.dcms.platform.entity;
// Generated 2017-3-22 10:33:46 by Hibernate Tools 4.3.5.Final

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Admin generated by hbm2java
 */
@Entity
@org.hibernate.annotations.Entity(dynamicUpdate = true, dynamicInsert = true)
@Table(name = "Admin", catalog = "dcms_db")
public class Admin implements java.io.Serializable {

    private String pkAid;
    private String fkParentId;
    private String account;
    private String name;
    private String passwd;
    private Integer adminType;
    private Integer createFrom;
    private Integer derive;
    private Integer adminState;
    private String description;
    private Long createTime;
    private List<Token> tokens = new ArrayList<Token>(0);
    private List<AdminLog> adminLogs = new ArrayList<AdminLog>(0);
    private List<User> users = new ArrayList<User>(0);
    private List<MarkKey> markKeys = new ArrayList<MarkKey>(0);

    public Admin() {
    }

    public Admin(String pkAid) {
        this.pkAid = pkAid;
    }

    public Admin(String pkAid, String fkParentId, String account, String name, String passwd, Integer adminType,
            Integer createFrom, Integer derive, Integer adminState, String description, Long createTime,
            List<Token> tokens, List<AdminLog> adminLogs, List<User> users, List<MarkKey> markKeys) {
        super();
        this.pkAid = pkAid;
        this.fkParentId = fkParentId;
        this.account = account;
        this.name = name;
        this.passwd = passwd;
        this.adminType = adminType;
        this.createFrom = createFrom;
        this.derive = derive;
        this.adminState = adminState;
        this.description = description;
        this.createTime = createTime;
        this.tokens = tokens;
        this.adminLogs = adminLogs;
        this.users = users;
        this.markKeys = markKeys;
    }

    @Id

    @Column(name = "pkAid", unique = true, nullable = false, length = 256)
    public String getPkAid() {
        return this.pkAid;
    }

    public void setPkAid(String pkAid) {
        this.pkAid = pkAid;
    }

    @Column(name = "fkParentId", length = 256, columnDefinition = "")
    public String getFkParentId() {
        return this.fkParentId;
    }

    public void setFkParentId(String fkParentId) {
        this.fkParentId = fkParentId;
    }

    @Column(name = "account", length = 256, columnDefinition = "")
    public String getAccount() {
        return this.account;
    }

    public void setAccount(String account) {
        this.account = account;
    }

    @Column(name = "name", length = 256, columnDefinition = "")
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "passwd", length = 256, columnDefinition = "")
    public String getPasswd() {
        return this.passwd;
    }

    public void setPasswd(String passwd) {
        this.passwd = passwd;
    }

    @Column(name = "adminType")
    public Integer getAdminType() {
        return this.adminType;
    }

    public void setAdminType(Integer adminType) {
        this.adminType = adminType;
    }

    @Column(name = "createFrom")
    public Integer getCreateFrom() {
        return this.createFrom;
    }

    public void setCreateFrom(Integer createFrom) {
        this.createFrom = createFrom;
    }

    @Column(name = "createTime")
    public Long getCreateTime() {
        return this.createTime;
    }

    public void setCreateTime(Long createTime) {
        this.createTime = createTime;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "admin")
    public List<Token> getTokens() {
        return this.tokens;
    }

    public void setTokens(List<Token> tokens) {
        this.tokens = tokens;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "admin")
    public List<AdminLog> getAdminLogs() {
        return this.adminLogs;
    }

    public void setAdminLogs(List<AdminLog> adminLogs) {
        this.adminLogs = adminLogs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "admin")
    public List<User> getUsers() {
        return this.users;
    }

    public void setUsers(List<User> users) {
        this.users = users;
    }

    @Column(name = "derive")
    public Integer getDerive() {
        return derive;
    }

    public void setDerive(Integer derive) {
        this.derive = derive;
    }

    @Column(name = "description", length = 256, columnDefinition = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name = "adminState")
    public Integer getAdminState() {
        return adminState;
    }

    public void setAdminState(Integer adminState) {
        this.adminState = adminState;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "admin")
    public List<MarkKey> getMarkKeys() {
        return this.markKeys;
    }

    public void setMarkKeys(List<MarkKey> markKeys) {
        this.markKeys = markKeys;
    }

}
