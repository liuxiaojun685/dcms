package cn.bestsec.dcms.platform.entity;
// Generated 2017-3-22 10:33:46 by Hibernate Tools 4.3.5.Final

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@org.hibernate.annotations.Entity(dynamicUpdate=true,dynamicInsert=true)  
@Table(name = "User", catalog = "dcms_db")
public class User implements java.io.Serializable {

    private String pkUid;
    private Admin admin;
    private Client client;
    private String account;
    private String name;
    private Integer gender;
    private String phone;
    private String mail;
    private String position;
    private String passwd;
    private Integer userLevel;
    private Integer userState;
    private Integer passwdState;
    private Integer createFrom;
    private Long createTime;
    private Long firstLoginTime;
    private Long lastLoginTime;
    private Integer lastLoginType;
    private String lastLoginIp;
    private Integer errLoginCount;
    private Long heartbeatTime;
    private Long unlockTime;
    private Long lastPasswdChangeTime;
    private List<WorkflowTrack> workflowTracks = new ArrayList<WorkflowTrack>(0);
    private List<Client> clientsForFkFirstLoginUid = new ArrayList<Client>(0);
    private List<Client> clientsForFkLastLoginUid = new ArrayList<Client>(0);
    private List<FileLevelChangeHistory> fileLevelChangeHistoriesForFkUid = new ArrayList<FileLevelChangeHistory>(0);
    private List<FileLevelChangeHistory> fileLevelChangeHistoriesForFkFileLevelDecideUid = new ArrayList<FileLevelChangeHistory>(
            0);
    private List<UserToGroup> userToGroups = new ArrayList<UserToGroup>(0);
    private List<Role> rolesForFkAgentUid = new ArrayList<Role>(0);
    private List<Role> rolesForFkUid = new ArrayList<Role>(0);
    private List<File> filesForFkFileDispatchUid = new ArrayList<File>(0);
    private List<File> filesForFkFileLevelDecideUid = new ArrayList<File>(0);
    private List<Workflow> workflows = new ArrayList<Workflow>(0);
    private List<ClientRequestLog> clientRequestLogs = new ArrayList<ClientRequestLog>(0);
    private List<File> filesForFkFileCreateUid = new ArrayList<File>(0);
    private List<UserToDepartment> userToDepartments = new ArrayList<UserToDepartment>(0);
    private List<Token> tokens = new ArrayList<Token>(0);
    private List<ClientLog> clientLogs = new ArrayList<ClientLog>(0);

    public User() {
    }

    public User(String pkUid) {
        this.pkUid = pkUid;
    }

    public User(String pkUid, Admin admin, Client client, String account, String name, Integer gender, String phone,
            String mail, String position, String passwd, Integer userLevel, Integer userState, Integer passwdState,
            Integer createFrom, Long createTime, Long firstLoginTime, Long lastLoginTime, Integer lastLoginType,
            String lastLoginIp, Integer errLoginCount, Long heartbeatTime, Long unlockTime, Long lastPasswdChangeTime,
            List<WorkflowTrack> workflowTracks, List<Client> clientsForFkFirstLoginUid,
            List<Client> clientsForFkLastLoginUid, List<FileLevelChangeHistory> fileLevelChangeHistoriesForFkUid,
            List<FileLevelChangeHistory> fileLevelChangeHistoriesForFkFileLevelDecideUid, List<UserToGroup> userToGroups,
            List<Role> rolesForFkAgentUid, List<Role> rolesForFkUid, List<File> filesForFkFileDispatchUid,
            List<File> filesForFkFileLevelDecideUid, List<Workflow> workflows, List<ClientRequestLog> clientRequestLogs,
            List<File> filesForFkFileCreateUid, List<UserToDepartment> userToDepartments, List<Token> tokens,
            List<ClientLog> clientLogs) {
        this.pkUid = pkUid;
        this.admin = admin;
        this.client = client;
        this.account = account;
        this.name = name;
        this.gender = gender;
        this.phone = phone;
        this.mail = mail;
        this.position = position;
        this.passwd = passwd;
        this.userLevel = userLevel;
        this.userState = userState;
        this.passwdState = passwdState;
        this.createFrom = createFrom;
        this.createTime = createTime;
        this.firstLoginTime = firstLoginTime;
        this.lastLoginTime = lastLoginTime;
        this.lastLoginType = lastLoginType;
        this.lastLoginIp = lastLoginIp;
        this.errLoginCount = errLoginCount;
        this.heartbeatTime = heartbeatTime;
        this.unlockTime = unlockTime;
        this.lastPasswdChangeTime = lastPasswdChangeTime;
        this.workflowTracks = workflowTracks;
        this.clientsForFkFirstLoginUid = clientsForFkFirstLoginUid;
        this.clientsForFkLastLoginUid = clientsForFkLastLoginUid;
        this.fileLevelChangeHistoriesForFkUid = fileLevelChangeHistoriesForFkUid;
        this.fileLevelChangeHistoriesForFkFileLevelDecideUid = fileLevelChangeHistoriesForFkFileLevelDecideUid;
        this.userToGroups = userToGroups;
        this.rolesForFkAgentUid = rolesForFkAgentUid;
        this.rolesForFkUid = rolesForFkUid;
        this.filesForFkFileDispatchUid = filesForFkFileDispatchUid;
        this.filesForFkFileLevelDecideUid = filesForFkFileLevelDecideUid;
        this.workflows = workflows;
        this.clientRequestLogs = clientRequestLogs;
        this.filesForFkFileCreateUid = filesForFkFileCreateUid;
        this.userToDepartments = userToDepartments;
        this.tokens = tokens;
        this.clientLogs = clientLogs;
    }

    @Id

    @Column(name = "pkUid", unique = true, nullable = false, length = 256)
    public String getPkUid() {
        return this.pkUid;
    }

    public void setPkUid(String pkUid) {
        this.pkUid = pkUid;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "fkCreateAid")
    public Admin getAdmin() {
        return this.admin;
    }

    public void setAdmin(Admin admin) {
        this.admin = admin;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "fkLastLoginCid")
    public Client getClient() {
        return this.client;
    }

    public void setClient(Client client) {
        this.client = client;
    }

    @Column(name = "account", length = 256, columnDefinition = "")
    public String getAccount() {
        return this.account;
    }

    public void setAccount(String account) {
        this.account = account;
    }

    @Column(name = "name", length = 256, columnDefinition = "")
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "gender")
    public Integer getGender() {
        return this.gender;
    }

    public void setGender(Integer gender) {
        this.gender = gender;
    }

    @Column(name = "phone", length = 256, columnDefinition = "")
    public String getPhone() {
        return this.phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    @Column(name = "mail", length = 256, columnDefinition = "")
    public String getMail() {
        return this.mail;
    }

    public void setMail(String mail) {
        this.mail = mail;
    }

    @Column(name = "position", length = 256, columnDefinition = "")
    public String getPosition() {
        return this.position;
    }

    public void setPosition(String position) {
        this.position = position;
    }

    @Column(name = "passwd", length = 256, columnDefinition = "")
    public String getPasswd() {
        return this.passwd;
    }

    public void setPasswd(String passwd) {
        this.passwd = passwd;
    }

    @Column(name = "userLevel")
    public Integer getUserLevel() {
        return this.userLevel;
    }

    public void setUserLevel(Integer userLevel) {
        this.userLevel = userLevel;
    }

    @Column(name = "userState")
    public Integer getUserState() {
        return this.userState;
    }

    public void setUserState(Integer userState) {
        this.userState = userState;
    }

    @Column(name = "passwdState")
    public Integer getPasswdState() {
        return this.passwdState;
    }

    public void setPasswdState(Integer passwdState) {
        this.passwdState = passwdState;
    }

    @Column(name = "createFrom")
    public Integer getCreateFrom() {
        return this.createFrom;
    }

    public void setCreateFrom(Integer createFrom) {
        this.createFrom = createFrom;
    }

    @Column(name = "createTime")
    public Long getCreateTime() {
        return this.createTime;
    }

    public void setCreateTime(Long createTime) {
        this.createTime = createTime;
    }

    @Column(name = "firstLoginTime")
    public Long getFirstLoginTime() {
        return this.firstLoginTime;
    }

    public void setFirstLoginTime(Long firstLoginTime) {
        this.firstLoginTime = firstLoginTime;
    }

    @Column(name = "lastLoginTime")
    public Long getLastLoginTime() {
        return this.lastLoginTime;
    }

    public void setLastLoginTime(Long lastLoginTime) {
        this.lastLoginTime = lastLoginTime;
    }

    @Column(name = "lastLoginType")
    public Integer getLastLoginType() {
        return this.lastLoginType;
    }

    public void setLastLoginType(Integer lastLoginType) {
        this.lastLoginType = lastLoginType;
    }

    @Column(name = "lastLoginIp", length = 256, columnDefinition = "")
    public String getLastLoginIp() {
        return this.lastLoginIp;
    }

    public void setLastLoginIp(String lastLoginIp) {
        this.lastLoginIp = lastLoginIp;
    }

    @Column(name = "errLoginCount")
    public Integer getErrLoginCount() {
        return this.errLoginCount;
    }

    public void setErrLoginCount(Integer errLoginCount) {
        this.errLoginCount = errLoginCount;
    }

    @Column(name = "heartbeatTime")
    public Long getHeartbeatTime() {
        return this.heartbeatTime;
    }

    public void setHeartbeatTime(Long heartbeatTime) {
        this.heartbeatTime = heartbeatTime;
    }

    @Column(name = "unlockTime")
    public Long getUnlockTime() {
        return this.unlockTime;
    }

    public void setUnlockTime(Long unlockTime) {
        this.unlockTime = unlockTime;
    }

    @Column(name = "lastPasswdChangeTime")
    public Long getLastPasswdChangeTime() {
        return this.lastPasswdChangeTime;
    }

    public void setLastPasswdChangeTime(Long lastPasswdChangeTime) {
        this.lastPasswdChangeTime = lastPasswdChangeTime;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public List<WorkflowTrack> getWorkflowTracks() {
        return this.workflowTracks;
    }

    public void setWorkflowTracks(List<WorkflowTrack> workflowTracks) {
        this.workflowTracks = workflowTracks;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "userByFkFirstLoginUid")
    public List<Client> getClientsForFkFirstLoginUid() {
        return this.clientsForFkFirstLoginUid;
    }

    public void setClientsForFkFirstLoginUid(List<Client> clientsForFkFirstLoginUid) {
        this.clientsForFkFirstLoginUid = clientsForFkFirstLoginUid;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "userByFkLastLoginUid")
    public List<Client> getClientsForFkLastLoginUid() {
        return this.clientsForFkLastLoginUid;
    }

    public void setClientsForFkLastLoginUid(List<Client> clientsForFkLastLoginUid) {
        this.clientsForFkLastLoginUid = clientsForFkLastLoginUid;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "userByFkUid")
    public List<FileLevelChangeHistory> getFileLevelChangeHistoriesForFkUid() {
        return this.fileLevelChangeHistoriesForFkUid;
    }

    public void setFileLevelChangeHistoriesForFkUid(List<FileLevelChangeHistory> fileLevelChangeHistoriesForFkUid) {
        this.fileLevelChangeHistoriesForFkUid = fileLevelChangeHistoriesForFkUid;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "userByFkFileLevelDecideUid")
    public List<FileLevelChangeHistory> getFileLevelChangeHistoriesForFkFileLevelDecideUid() {
        return this.fileLevelChangeHistoriesForFkFileLevelDecideUid;
    }

    public void setFileLevelChangeHistoriesForFkFileLevelDecideUid(
            List<FileLevelChangeHistory> fileLevelChangeHistoriesForFkFileLevelDecideUid) {
        this.fileLevelChangeHistoriesForFkFileLevelDecideUid = fileLevelChangeHistoriesForFkFileLevelDecideUid;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public List<UserToGroup> getUserToGroups() {
        return this.userToGroups;
    }

    public void setUserToGroups(List<UserToGroup> userToGroups) {
        this.userToGroups = userToGroups;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "userByFkAgentUid")
    public List<Role> getRolesForFkAgentUid() {
        return this.rolesForFkAgentUid;
    }

    public void setRolesForFkAgentUid(List<Role> rolesForFkAgentUid) {
        this.rolesForFkAgentUid = rolesForFkAgentUid;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "userByFkUid")
    public List<Role> getRolesForFkUid() {
        return this.rolesForFkUid;
    }

    public void setRolesForFkUid(List<Role> rolesForFkUid) {
        this.rolesForFkUid = rolesForFkUid;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "userByFkFileDispatchUid")
    public List<File> getFilesForFkFileDispatchUid() {
        return this.filesForFkFileDispatchUid;
    }

    public void setFilesForFkFileDispatchUid(List<File> filesForFkFileDispatchUid) {
        this.filesForFkFileDispatchUid = filesForFkFileDispatchUid;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "userByFkFileLevelDecideUid")
    public List<File> getFilesForFkFileLevelDecideUid() {
        return this.filesForFkFileLevelDecideUid;
    }

    public void setFilesForFkFileLevelDecideUid(List<File> filesForFkFileLevelDecideUid) {
        this.filesForFkFileLevelDecideUid = filesForFkFileLevelDecideUid;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public List<Workflow> getWorkflows() {
        return this.workflows;
    }

    public void setWorkflows(List<Workflow> workflows) {
        this.workflows = workflows;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public List<ClientRequestLog> getClientRequestLogs() {
        return this.clientRequestLogs;
    }

    public void setClientRequestLogs(List<ClientRequestLog> clientRequestLogs) {
        this.clientRequestLogs = clientRequestLogs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "userByFkFileCreateUid")
    public List<File> getFilesForFkFileCreateUid() {
        return this.filesForFkFileCreateUid;
    }

    public void setFilesForFkFileCreateUid(List<File> filesForFkFileCreateUid) {
        this.filesForFkFileCreateUid = filesForFkFileCreateUid;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public List<UserToDepartment> getUserToDepartments() {
        return this.userToDepartments;
    }

    public void setUserToDepartments(List<UserToDepartment> userToDepartments) {
        this.userToDepartments = userToDepartments;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public List<Token> getTokens() {
        return this.tokens;
    }

    public void setTokens(List<Token> tokens) {
        this.tokens = tokens;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public List<ClientLog> getClientLogs() {
        return this.clientLogs;
    }

    public void setClientLogs(List<ClientLog> clientLogs) {
        this.clientLogs = clientLogs;
    }

}
