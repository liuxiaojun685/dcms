package cn.bestsec.dcms.platform.entity;
// Generated 2017-3-22 10:33:46 by Hibernate Tools 4.3.5.Final

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Client generated by hbm2java
 */
@Entity
@org.hibernate.annotations.Entity(dynamicUpdate=true,dynamicInsert=true)  
@Table(name = "Client", catalog = "dcms_db")
public class Client implements java.io.Serializable {

    private String pkCid;
    private User userByFkFirstLoginUid;
    private User userByFkLastLoginUid;
    private String pcName;
    private Integer clientLevel;
    private String ip;
    private String mac;
    private String osType;
    private Integer versionType;
    private Integer versionCode;
    private String versionName;
    private Long heartbeatTime;
    private Long firstLoginTime;
    private Long lastLoginTime;
    private String description;
    private Integer clientState;
    private List<ClientRequestLog> clientRequestLogs = new ArrayList<ClientRequestLog>(0);
    private List<Token> tokens = new ArrayList<Token>(0);
    private List<ClientLog> clientLogs = new ArrayList<ClientLog>(0);
    private List<User> users = new ArrayList<User>(0);

    public Client() {
    }

    public Client(String pkCid) {
        this.pkCid = pkCid;
    }

    public Client(String pkCid, User userByFkFirstLoginUid, User userByFkLastLoginUid, String pcName,
            Integer clientLevel, String ip, String mac, String osType, Integer versionType, Integer versionCode,
            String versionName, Long heartbeatTime, Long firstLoginTime, Long lastLoginTime, String description,
            Integer clientState, List<ClientRequestLog> clientRequestLogs, List<Token> tokens, List<ClientLog> clientLogs,
            List<User> users) {
        this.pkCid = pkCid;
        this.userByFkFirstLoginUid = userByFkFirstLoginUid;
        this.userByFkLastLoginUid = userByFkLastLoginUid;
        this.pcName = pcName;
        this.clientLevel = clientLevel;
        this.ip = ip;
        this.mac = mac;
        this.osType = osType;
        this.versionType = versionType;
        this.versionCode = versionCode;
        this.versionName = versionName;
        this.heartbeatTime = heartbeatTime;
        this.firstLoginTime = firstLoginTime;
        this.lastLoginTime = lastLoginTime;
        this.description = description;
        this.clientState = clientState;
        this.clientRequestLogs = clientRequestLogs;
        this.tokens = tokens;
        this.clientLogs = clientLogs;
        this.users = users;
    }

    @Id

    @Column(name = "pkCid", unique = true, nullable = false, length = 256)
    public String getPkCid() {
        return this.pkCid;
    }

    public void setPkCid(String pkCid) {
        this.pkCid = pkCid;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "fkFirstLoginUid")
    public User getUserByFkFirstLoginUid() {
        return this.userByFkFirstLoginUid;
    }

    public void setUserByFkFirstLoginUid(User userByFkFirstLoginUid) {
        this.userByFkFirstLoginUid = userByFkFirstLoginUid;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "fkLastLoginUid")
    public User getUserByFkLastLoginUid() {
        return this.userByFkLastLoginUid;
    }

    public void setUserByFkLastLoginUid(User userByFkLastLoginUid) {
        this.userByFkLastLoginUid = userByFkLastLoginUid;
    }

    @Column(name = "pcName", length = 256, columnDefinition = "")
    public String getPcName() {
        return this.pcName;
    }

    public void setPcName(String pcName) {
        this.pcName = pcName;
    }

    @Column(name = "clientLevel")
    public Integer getClientLevel() {
        return this.clientLevel;
    }

    public void setClientLevel(Integer clientLevel) {
        this.clientLevel = clientLevel;
    }

    @Column(name = "ip", length = 256, columnDefinition = "")
    public String getIp() {
        return this.ip;
    }

    public void setIp(String ip) {
        this.ip = ip;
    }

    @Column(name = "mac", length = 256, columnDefinition = "")
    public String getMac() {
        return this.mac;
    }

    public void setMac(String mac) {
        this.mac = mac;
    }

    @Column(name = "osType", length = 256, columnDefinition = "")
    public String getOsType() {
        return this.osType;
    }

    public void setOsType(String osType) {
        this.osType = osType;
    }

    @Column(name = "versionType")
    public Integer getVersionType() {
        return this.versionType;
    }

    public void setVersionType(Integer versionType) {
        this.versionType = versionType;
    }

    @Column(name = "versionCode")
    public Integer getVersionCode() {
        return this.versionCode;
    }

    public void setVersionCode(Integer versionCode) {
        this.versionCode = versionCode;
    }

    @Column(name = "versionName", length = 256, columnDefinition = "")
    public String getVersionName() {
        return this.versionName;
    }

    public void setVersionName(String versionName) {
        this.versionName = versionName;
    }

    @Column(name = "heartbeatTime")
    public Long getHeartbeatTime() {
        return this.heartbeatTime;
    }

    public void setHeartbeatTime(Long heartbeatTime) {
        this.heartbeatTime = heartbeatTime;
    }

    @Column(name = "firstLoginTime")
    public Long getFirstLoginTime() {
        return this.firstLoginTime;
    }

    public void setFirstLoginTime(Long firstLoginTime) {
        this.firstLoginTime = firstLoginTime;
    }

    @Column(name = "lastLoginTime")
    public Long getLastLoginTime() {
        return this.lastLoginTime;
    }

    public void setLastLoginTime(Long lastLoginTime) {
        this.lastLoginTime = lastLoginTime;
    }

    @Column(name = "description", length = 256, columnDefinition = "")
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name = "clientState")
    public Integer getClientState() {
        return this.clientState;
    }

    public void setClientState(Integer clientState) {
        this.clientState = clientState;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
    public List<ClientRequestLog> getClientRequestLogs() {
        return this.clientRequestLogs;
    }

    public void setClientRequestLogs(List<ClientRequestLog> clientRequestLogs) {
        this.clientRequestLogs = clientRequestLogs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
    public List<Token> getTokens() {
        return this.tokens;
    }

    public void setTokens(List<Token> tokens) {
        this.tokens = tokens;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
    public List<ClientLog> getClientLogs() {
        return this.clientLogs;
    }

    public void setClientLogs(List<ClientLog> clientLogs) {
        this.clientLogs = clientLogs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
    public List<User> getUsers() {
        return this.users;
    }

    public void setUsers(List<User> users) {
        this.users = users;
    }

}
